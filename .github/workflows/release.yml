name: Release

on:
  push:
    tags:
      - "v*.*.*"
      - "v*.*.*-*" # Support alpha/beta tags

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # macOS builds (these work well)
          - target: aarch64-apple-darwin
            os: macos-latest
            archive: tar.gz
          - target: x86_64-apple-darwin
            os: macos-13
            archive: tar.gz
          # Linux builds commented out until we fix cross-compilation
          # - target: x86_64-unknown-linux-gnu
          #   os: ubuntu-latest
          #   archive: tar.gz
          # - target: aarch64-unknown-linux-gnu
          #   os: ubuntu-latest
          #   archive: tar.gz
          # Commented out Windows for now to simplify
          # - os: windows-latest
          #   target: x86_64-pc-windows-msvc
          #   archive: zip

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build Release Binary
        run: cargo build --release --target ${{ matrix.target }} --bin rune

      - name: Package Release
        shell: bash
        run: |
          VERSION="${{ github.ref_name }}"
          NAME="rune-${VERSION}-${{ matrix.target }}"

          # Create the package
          mkdir -p dist

          if [[ "${{ matrix.archive }}" == "tar.gz" ]]; then
            if [[ -f "target/${{ matrix.target }}/release/rune" ]]; then
              tar -czf dist/${NAME}.tar.gz -C target/${{ matrix.target }}/release rune
              # Generate checksum for this file
              cd dist
              if [[ "${{ runner.os }}" == "macOS" ]]; then
                shasum -a 256 ${NAME}.tar.gz > ${NAME}.tar.gz.sha256
              else
                sha256sum ${NAME}.tar.gz > ${NAME}.tar.gz.sha256
              fi
              cd ..
            else
              echo "Binary not found at target/${{ matrix.target }}/release/rune"
              ls -la target/${{ matrix.target }}/release/
              exit 1
            fi
          else
            # For Windows (if we enable it later)
            if [[ -f "target/${{ matrix.target }}/release/rune.exe" ]]; then
              cd target/${{ matrix.target }}/release
              7z a ../../../dist/${NAME}.zip rune.exe
              cd ../../../dist
              if [[ "${{ runner.os }}" == "macOS" ]]; then
                shasum -a 256 ${NAME}.zip > ${NAME}.zip.sha256
              else
                sha256sum ${NAME}.zip > ${NAME}.zip.sha256
              fi
            else
              echo "Binary not found at target/${{ matrix.target }}/release/rune.exe"
              exit 1
            fi
          fi

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/rune-*.${{ matrix.archive }}
            dist/rune-*.${{ matrix.archive }}.sha256
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') }}
