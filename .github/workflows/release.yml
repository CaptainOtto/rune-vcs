name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  issues: write
  pull-requests: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: aarch64-apple-darwin
            archive: tar.gz
          - os: macos-13
            target: x86_64-apple-darwin
            archive: tar.gz
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive: zip

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package Release
        shell: bash
        run: |
          VERSION="${{ github.ref_name }}"
          NAME="rune-${VERSION}-${{ matrix.target }}"
          
          if [[ "${{ matrix.archive }}" == "tar.gz" ]]; then
            tar -czf ${NAME}.tar.gz -C target/${{ matrix.target }}/release rune
          else
            # For Windows, create zip file
            cd target/${{ matrix.target }}/release
            zip ../../../${NAME}.zip rune.exe
          fi

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: rune-*.${{ matrix.archive }}

  homebrew:
    name: Update Homebrew Tap
    needs: build
    runs-on: ubuntu-latest
    if: false  # Disable for now until HOMEBREW_TAP_TOKEN is configured
    
    steps:
      - name: Placeholder
        run: echo "Homebrew tap update disabled"
