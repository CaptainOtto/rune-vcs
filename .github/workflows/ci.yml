name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings -A dead_code -A unused_imports -A unused_variables

      - name: Run tests
        run: cargo test --all-features --workspace --verbose

      - name: Run integration tests
        run: |
          if [ -d "tests" ] && [ "$(ls -A tests)" ]; then
            cargo test --test '*' --verbose
          else
            echo "No integration tests found, skipping"
          fi

      - name: Run benchmarks (check only)
        run: |
          if [ -d "benches" ] && [ "$(ls -A benches)" ]; then
            cargo bench --no-run
          else
            echo "No benchmarks found, skipping"
          fi

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: Generate coverage report
        run: |
          echo "Coverage report generated: lcov.info"
          echo "Lines covered:"
          grep -c "^DA:" lcov.info || true

  security_audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Security audit
        run: cargo audit

  performance:
    name: Performance Regression
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Check if benchmarks exist
        id: check_benchmarks
        run: |
          if [ -d "benches" ] && [ "$(ls -A benches)" ]; then
            echo "exist=true" >> $GITHUB_OUTPUT
          else
            echo "exist=false" >> $GITHUB_OUTPUT
          fi

      - name: Run benchmarks on main
        if: steps.check_benchmarks.outputs.exist == 'true'
        run: |
          git checkout main
          cargo bench -- --save-baseline main

      - name: Run benchmarks on PR
        if: steps.check_benchmarks.outputs.exist == 'true'
        run: |
          git checkout ${{ github.head_ref }}
          cargo bench -- --save-baseline pr

      - name: Compare benchmarks
        if: steps.check_benchmarks.outputs.exist == 'true'
        run: |
          cargo bench -- --load-baseline main --baseline pr

      - name: Skip benchmarks
        if: steps.check_benchmarks.outputs.exist == 'false'
        run: echo "No benchmark files found, skipping performance regression tests"

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Check documentation
        run: cargo doc --all-features --no-deps --document-private-items

      - name: Check for broken doc links
        run: cargo doc --all-features --no-deps --document-private-items 2>&1 | grep -i "warning\|error" || true
