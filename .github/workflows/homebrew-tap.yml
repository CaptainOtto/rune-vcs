name: Update Homebrew Tap

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to update tap for'
        required: true
        default: 'v0.2.0'

env:
  CARGO_TERM_COLOR: always

jobs:
  update-homebrew-tap:
    runs-on: macos-latest
    steps:
      - name: Checkout rune-vcs
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build release binary for macOS
        run: cargo build --release

      - name: Create release archive
        run: |
          VERSION="${{ github.event.release.tag_name || github.event.inputs.version }}"
          mkdir -p release-package
          cp target/release/rune release-package/
          cd release-package
          tar -czf rune-${VERSION}-macos.tar.gz rune
          shasum -a 256 rune-${VERSION}-macos.tar.gz > rune-${VERSION}-macos.tar.gz.sha256
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "SHA256=$(cat rune-${VERSION}-macos.tar.gz.sha256 | cut -d' ' -f1)" >> $GITHUB_ENV

      - name: Upload release archive to release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: release-package/rune-${{ env.VERSION }}-macos.tar.gz
          asset_name: rune-${{ env.VERSION }}-macos.tar.gz
          asset_content_type: application/gzip

      - name: Checkout homebrew-rune-vcs
        uses: actions/checkout@v4
        with:
          repository: Johan-Ott/homebrew-rune-vcs
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          path: homebrew-tap

      - name: Update Formula
        run: |
          cd homebrew-tap
          
          # Create Formula directory if it doesn't exist
          mkdir -p Formula
          
          # Create or update the rune.rb formula
          cat > Formula/rune.rb << EOF
          class Rune < Formula
            desc "Rune VCS - Modern, scalable version control system"
            homepage "https://github.com/CaptainOtto/rune-vcs"
            url "https://github.com/CaptainOtto/rune-vcs/releases/download/${{ env.VERSION }}/rune-${{ env.VERSION }}-macos.tar.gz"
            sha256 "${{ env.SHA256 }}"
            license "MIT"
            version "${{ env.VERSION }}"

            def install
              bin.install "rune"
            end

            test do
              system "#{bin}/rune", "version"
            end
          end
          EOF

      - name: Commit and push tap update
        run: |
          cd homebrew-tap
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Formula/rune.rb
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update rune to ${{ env.VERSION }}"
            git push
          fi

      - name: Summary
        run: |
          echo "✅ Homebrew tap updated successfully!"
          echo "📦 Version: ${{ env.VERSION }}"
          echo "🔐 SHA256: ${{ env.SHA256 }}"
          echo ""
          echo "Users can now install with:"
          echo "brew tap johan-ott/rune-vcs"
          echo "brew install rune"
